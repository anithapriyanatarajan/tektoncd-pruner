apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: tekton-pipelines
data:
  collector.yaml: |
    receivers:
      otlp:
        protocols:
          http:
            endpoint: 0.0.0.0:4318
          grpc:
            endpoint: 0.0.0.0:4317

    processors:
      batch:
        timeout: 10s
        send_batch_size: 1024

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        namespace: tekton_pruner
        const_labels:
          service: "tekton-pruner"

    service:
      pipelines:
        metrics:
          receivers: [otlp]
          processors: [batch]
          exporters: [prometheus]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
    spec:
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:0.96.0
        args:
          - "--config=/conf/collector.yaml"
        ports:
          - containerPort: 4317  # OTLP gRPC
          - containerPort: 4318  # OTLP HTTP
          - containerPort: 8889  # Prometheus exporter
        volumeMounts:
          - name: collector-config
            mountPath: /conf
      volumes:
        - name: collector-config
          configMap:
            name: otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: tekton-pipelines
spec:
  ports:
  - name: otlp-http
    port: 4318
    targetPort: 4318
    protocol: TCP
  - name: otlp-grpc
    port: 4317
    targetPort: 4317
    protocol: TCP
  - name: prometheus
    port: 8889
    targetPort: 8889
    protocol: TCP
  selector:
    app: otel-collector
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector-headless
  namespace: tekton-pipelines
spec:
  clusterIP: None
  ports:
  - name: otlp-http
    port: 4318
    targetPort: 4318
    protocol: TCP
  selector:
    app: otel-collector